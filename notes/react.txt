📌 React ?
   - react is Javascript library for building user interfaces
   - because react uses js in the browser to update page (like click on tab and see video without reloading in an app ) 
     and user interface we see on that page without reloading the page,
   - js controls UI & content
📌 why to use React ? 
   -> it offers a simple mental model
📌 But then why we need React library as everything done by js ?
   - because complex js code quickly become error prone
   - complex code hard to maintain or edit   
   
🔹 CodeSandbox ?
In Browser Cloud code editor and devlopment environment help in working on react project without 
installing any software or tools.   

📌
| **Feature**           | **React**                                               | **Vanilla JavaScript**                         |
| --------------------- | ------------------------------------------------------- | ---------------------------------------------- |
| **Programming Style** | Declarative (describe what you want, React handles how) | Imperative (you manually update the DOM)       |
| **DOM Manipulation**  | Uses **Virtual DOM** → faster updates                   | Directly manipulates the **Real DOM** → slower |
| **Structure**         | Component-based, modular, and scalable                  | Plain JavaScript with separate HTML/CSS        |
| **State Management**  | Built-in state (`useState`) and libraries like Redux    | Manually handled, no built-in solution         |
| **Performance**       | Optimized re-renders, only updates what’s necessary     | Entire DOM re-renders, even for small changes  |
| **Learning Curve**    | Slightly steeper (JSX, components, hooks)               | Easier to start with                           |
| **Best For**          | Large, interactive applications                         | Small projects or simple scripts               |

React ➡️ Good for building large, interactive, and scalable apps.
Vanilla JS ➡️ Good for quick, simple websites or scripts.

📌What is the DOM? (Document Object Model)
The Document Object Model (DOM) is a programming interface that represents the structure of an HTML or XML document as a tree of objects. It allows you to access, modify, and manipulate the content, structure, and styles of a webpage.

🔍 Visual Representation
html
Copy
Edit
<!DOCTYPE html>
<html>
  <head>
    <title>My Page</title>
  </head>
  <body>
    <h1>Hello World!</h1>
    <p>This is a paragraph.</p>
  </body>
</html>
When the browser loads this HTML, it creates a DOM tree like this:

css
Copy
Edit
Document
│
├── html
│   ├── head
│   │   └── title → "My Page"
│   └── body
│       ├── h1 → "Hello World!"
│       └── p → "This is a paragraph."

📌 Why do we need special project setup for react ?
because while writing react code we use JSX (html in js) which does not work in browser ,
so it transform & optimized to code that run in browser (js code without JSX) ...handle by build tool eg. Vite 